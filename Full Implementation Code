<?php
// routes/web.php
use App\Http\Controllers\AuthController;
use App\Http\Controllers\DashboardController;
use App\Http\Controllers\CustomerController;
use App\Http\Controllers\DriverController;
use App\Http\Controllers\RideRequestController;

Route::get('/', [DashboardController::class, 'index'])->middleware('auth');

Route::get('/login', [AuthController::class, 'showLoginForm'])->name('login');
Route::post('/login', [AuthController::class, 'login']);
Route::post('/logout', [AuthController::class, 'logout'])->name('logout');

Route::middleware('auth')->group(function () {
    Route::get('/customers', [CustomerController::class, 'index'])->name('customers.index');
    Route::get('/drivers', [DriverController::class, 'index'])->name('drivers.index');
    Route::get('/ride-requests', [RideRequestController::class, 'index'])->name('ride-requests.index');
});

// AuthController.php
namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use App\Models\User;

class AuthController extends Controller
{
    public function showLoginForm()
    {
        return view('auth.login');
    }

    public function login(Request $request)
    {
        $request->validate([
            'phone_number' => 'required|exists:users,phone_number',
            'pin' => 'required|min:4|max:4',
        ]);

        $user = User::where('phone_number', $request->phone_number)->first();

        if ($user && Hash::check($request->pin, $user->pin)) {
            Auth::login($user);
            return redirect('/');
        }

        return back()->withErrors(['phone_number' => 'Invalid credentials.']);
    }

    public function logout()
    {
        Auth::logout();
        return redirect('/login');
    }
}

// DashboardController.php
namespace App\Http\Controllers;

use App\Models\Customer;
use App\Models\Driver;
use App\Models\RideRequest;

class DashboardController extends Controller
{
    public function index()
    {
        return view('dashboard', [
            'customersCount' => Customer::count(),
            'driversCount' => Driver::count(),
            'completedRidesCount' => RideRequest::where('status', 'completed')->count(),
        ]);
    }
}

// CustomerController.php
namespace App\Http\Controllers;

use App\Models\Customer;
use Illuminate\Http\Request;

class CustomerController extends Controller
{
    public function index(Request $request)
    {
        $customers = Customer::query();

        if ($request->has('registration_date')) {
            $customers->whereDate('created_at', $request->registration_date);
        }

        $customers = $customers->orderBy('created_at', 'desc')->get();

        return view('customers.index', compact('customers'));
    }
}

// DriverController.php
namespace App\Http\Controllers;

use App\Models\Driver;
use Illuminate\Http\Request;

class DriverController extends Controller
{
    public function index(Request $request)
    {
        $drivers = Driver::query();

        if ($request->has('county')) {
            $drivers->where('county', $request->county);
        }

        if ($request->has('sub_county')) {
            $drivers->where('sub_county', $request->sub_county);
        }

        $drivers = $drivers->orderBy('created_at', 'desc')->get();

        return view('drivers.index', compact('drivers'));
    }
}

// RideRequestController.php
namespace App\Http\Controllers;

use App\Models\RideRequest;

class RideRequestController extends Controller
{
    public function index()
    {
        $rideRequests = RideRequest::orderBy('created_at', 'desc')->get();
        return view('ride-requests.index', compact('rideRequests'));
    }
}

// database/migrations/XXXX_XX_XX_create_users_table.php
Schema::create('users', function (Blueprint $table) {
    $table->id();
    $table->string('phone_number')->unique();
    $table->string('pin');
    $table->timestamps();
});

// database/migrations/XXXX_XX_XX_create_customers_table.php
Schema::create('customers', function (Blueprint $table) {
    $table->id();
    $table->string('name');
    $table->string('phone_number')->unique();
    $table->timestamps();
});

// database/migrations/XXXX_XX_XX_create_drivers_table.php
Schema::create('drivers', function (Blueprint $table) {
    $table->id();
    $table->string('name');
    $table->string('phone_number')->unique();
    $table->string('county');
    $table->string('sub_county');
    $table->timestamps();
});

// database/migrations/XXXX_XX_XX_create_ride_requests_table.php
Schema::create('ride_requests', function (Blueprint $table) {
    $table->id();
    $table->foreignId('customer_id')->constrained();
    $table->foreignId('driver_id')->constrained();
    $table->enum('status', ['pending', 'completed']);
    $table->timestamps();
});
